{"version":3,"sources":["contexts/CurrentUserContext.js","images/logo.svg","components/Header.js","components/Card.js","components/Main.js","components/Footer.js","components/PopupWithForm.js","components/AddPlacePopup.js","components/EditProfilePopup.js","components/EditAvatarPopup.js","components/PopupDeleteCard.js","components/ImagePopup.js","utils/Api.js","components/App.js","reportWebVitals.js","index.js"],"names":["CurrentUserContext","React","createContext","Header","className","src","headerLogo","alt","Card","props","currentUser","useContext","isOwn","card","owner","_id","cardDeleteButtonClassName","isLiked","likes","some","i","cardLikeButtonClassName","type","onClick","onCardDelete","onCardDataRead","onButtonPopupTextRead","name","link","onCardClick","onCardLike","Main","avatar","onEditAvatar","onButtonTextRead","onEditProfile","about","onAddPlace","cards","map","length","Footer","PopupWithForm","isOpen","onClose","title","onSubmit","children","disabled","buttonDisable","buttonText","AddPlacePopup","useState","nameCard","setNameCard","linkCardImage","setLinkCardImage","e","preventDefault","htmlFor","id","placeholder","required","minLength","maxLength","value","onChange","target","EditProfilePopup","setName","description","setDescription","useEffect","onUpdateUser","EditAvatarPopup","avatarRef","useRef","onUpdateAvatar","current","ref","defaultValue","PopupDeleteCard","onDeleteCard","onCardDeleteData","ImagePopup","api","config","authorization","this","url","headers","res","ok","json","Promise","reject","status","fetch","then","response","_getResponseData","data","method","body","JSON","stringify","App","emptyCard","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isDeleteCardPopupOpen","setIsDeleteCardPopupOpen","selectedCard","setSelectedCard","setCards","setCurrentUser","closeAllPopups","getUserInfoApi","userData","catch","err","console","log","closeByEscape","key","document","addEventListener","removeEventListener","getCards","cardsData","deleteCard","setDeleteCard","setButtonText","setButtonDisable","buttonState","button","isLoading2","Provider","deleteLikedApi","newCard","state","c","likeApi","cardDeleteData","newUserData","createNewUserInfoApi","finally","newUserAvatar","createNewUserAvatarApi","createCardApi","cardDataDelete","deleteCardApi","filter","cardData","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.0c52147e.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport const CurrentUserContext = React.createContext();","export default __webpack_public_path__ + \"static/media/logo.bbe2a6ea.svg\";","import React from 'react';\r\nimport headerLogo from '../images/logo.svg';\r\n\r\nfunction Header() {\r\n    return (\r\n        <header className=\"header\">\r\n            <img className=\"logo\" src={headerLogo} alt=\"логотип\"/>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext.js\";\r\n\r\n\r\nfunction Card(props) {\r\n    const currentUser = React.useContext(CurrentUserContext);\r\n\r\n    const isOwn = props.card.owner._id === currentUser._id;\r\n    const cardDeleteButtonClassName = (\r\n        `card__delete page__button ${isOwn ? 'card__delete_visible' : 'card__delete_invisible'}`\r\n    );\r\n\r\n    const isLiked = props.card.likes.some(i => i._id === currentUser._id);\r\n    const cardLikeButtonClassName = (\r\n        `${isLiked ? 'card__like card__like_active' : 'card__like'}`\r\n    );\r\n\r\n    function handleClick() {\r\n        props.onCardClick(props.card);\r\n    }\r\n\r\n    function handleLikeClick() {\r\n        props.onCardLike(props.card);\r\n    }\r\n\r\n    function cardDataRead() {\r\n        props.onCardDataRead(props.card);\r\n    }\r\n\r\n    return (\r\n        <li className=\"card\">\r\n            <button className={cardDeleteButtonClassName} type=\"button\" onClick={function(){ props.onCardDelete(); cardDataRead(); props.onButtonPopupTextRead('Да')}}></button>\r\n            <img className=\"card__image\" alt={props.name} src={props.link} onClick={handleClick}/>\r\n            <div className=\"card__image-info\">\r\n                <h2 className=\"card__title\">{props.name}</h2>\r\n                <div className=\"card__like-box\">\r\n                    <button className={cardLikeButtonClassName} type=\"button\" onClick={handleLikeClick}></button>\r\n                    <p className=\"card__like-amount\">{props.likes}</p>\r\n                </div>\r\n            </div>\r\n        </li>\r\n    );\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext.js\";\r\nimport Card from './Card.js';\r\n\r\nfunction Main(props) {\r\n\r\n    const currentUser = React.useContext(CurrentUserContext);\r\n\r\n\r\n    return (\r\n        <main className=\"content\">\r\n            <section className=\"profile\">\r\n                <div className=\"profile__info\">\r\n                    <div className=\"profile__avatar-box\" >\r\n\r\n                        <img className=\"profile__avatar\" alt=\"аватар\"  src={currentUser.avatar}/>\r\n\r\n                            <div className=\"profile__avatar-hover\">\r\n                                <button className=\"profile__edit-avatar-button\" type=\"button\" onClick={function(){props.onEditAvatar(); props.onButtonTextRead('Сохранить')}}></button>\r\n                            </div>\r\n                    </div>\r\n                    <div className=\"profile__text\">\r\n                        <div className=\"profile__name-edit\">\r\n                            <h1 className=\"profile__name\">{currentUser.name}</h1>\r\n                            <button className=\"profile__edit-button page__button\" type=\"button\" onClick={function(){props.onEditProfile(); props.onButtonTextRead('Сохранить')}}></button>\r\n                        </div>\r\n                        <p className=\"profile__about\">{currentUser.about}</p>\r\n                    </div>\r\n                </div>\r\n                <button className=\"profile__add-button page__button\" type=\"button\" onClick={function(){props.onAddPlace(); props.onButtonTextRead('Создать')}}></button>\r\n            </section>\r\n\r\n            <section className=\"gallery\">\r\n                <ul className=\"cards\">\r\n                    {props.cards.map((card) => (<Card card={card}\r\n                                                      name={card.name}\r\n                                                      link={card.link}\r\n                                                      likes={card.likes.length}\r\n                                                      key={card._id}\r\n                                                      onCardClick={props.onCardClick}\r\n                                                      onCardLike={props.onCardLike}\r\n                                                      onCardDelete={props.onCardDelete}\r\n                                                      onCardDataRead={props.onCardDataRead}\r\n                                                      onButtonPopupTextRead={props.onButtonTextRead}/>)\r\n                                               )}\r\n                </ul>\r\n            </section>\r\n        </main>\r\n    );\r\n}\r\n\r\nexport default Main;","import React from 'react';\r\n\r\nfunction Footer() {\r\n    return (\r\n        <footer className=\"footer\">\r\n            <p className=\"footer__copyright\">&copy; 2021 Mesto Russia</p>\r\n        </footer>\r\n    );\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\n\r\nfunction PopupWithForm(props) {\r\n\r\n    return (\r\n        <section className={props.isOpen ? `popup popup_type_${props.name} popup_is-opened` : `popup popup_type_${props.name}`}>\r\n            <div className=\"popup__container\">\r\n                <button className=\"popup__close page__button\" onClick={props.onClose}></button>\r\n                <div className=\"popup__content\">\r\n                    <h2 className=\"popup__title\">{props.title}</h2>\r\n                    <form className=\"form\" name={props.name} onSubmit={props.onSubmit}>\r\n                        {props.children}\r\n                        <button type=\"submit\" className=\"form__save\" disabled={props.buttonDisable}>{props.buttonText}</button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default PopupWithForm;\r\n","import React from 'react';\r\nimport PopupWithForm from \"./PopupWithForm\";\r\n\r\nfunction AddPlacePopup(props) {\r\n\r\n    const [nameCard, setNameCard] = React.useState('');\r\n    const [linkCardImage, setLinkCardImage] = React.useState('');\r\n\r\n    function handleChangeNameCard(e) {\r\n        setNameCard(e.target.value);\r\n    }\r\n\r\n    function handleChangeLinkCardImage(e) {\r\n        setLinkCardImage(e.target.value);\r\n    }\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault();\r\n        props.onAddPlace({\r\n            name: nameCard,\r\n            link: linkCardImage\r\n        });\r\n\r\n        setNameCard('');\r\n        setLinkCardImage('');\r\n    }\r\n\r\n    return (\r\n        <PopupWithForm name=\"card\" title=\"Новое место\" isOpen={props.isOpen} onClose={props.onClose} onSubmit={handleSubmit}\r\n                       buttonText={props.buttonText} buttonDisable={props.buttonDisable}>\r\n            <>\r\n                <div className=\"form__section\">\r\n                    <label htmlFor=\"photo-name\" className=\"form__label\"></label>\r\n                    <input type=\"text\" className=\"form__item form__item_type_photo-name\"\r\n                           id=\"photo-name\" name=\"name\" placeholder=\"Название\" required minLength=\"2\"\r\n                           maxLength=\"30\" value={nameCard || ''} onChange={handleChangeNameCard}/>\r\n                    <span className=\"form__input-error\" id=\"photo-name-error\"></span>\r\n                </div>\r\n                <div className=\"form__section\">\r\n                    <label htmlFor=\"link\" className=\"form__label\"></label>\r\n                    <input type=\"url\" className=\"form__item form__item_type_link\" id=\"link\"\r\n                           name=\"link\" placeholder=\"Ссылка на картинку\" required\r\n                           value={linkCardImage || ''} onChange={handleChangeLinkCardImage}/>\r\n                    <span className=\"form__input-error\" id=\"link-error\"></span>\r\n                </div>\r\n            </>\r\n        </PopupWithForm>\r\n    );\r\n}\r\n\r\nexport default AddPlacePopup;","import React from 'react';\r\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext.js\";\r\nimport PopupWithForm from \"./PopupWithForm\";\r\n\r\nfunction EditProfilePopup(props) {\r\n\r\n    const [name, setName] = React.useState('');\r\n    const [description, setDescription] = React.useState('');\r\n    const currentUser = React.useContext(CurrentUserContext);\r\n\r\n    React.useEffect(() => {\r\n        setName(currentUser.name);\r\n        setDescription(currentUser.about);\r\n    }, [currentUser, props.isOpen]);\r\n\r\n    function handleChangeName(e) {\r\n        setName(e.target.value);\r\n    }\r\n\r\n    function handleChangeDescription(e) {\r\n        setDescription(e.target.value);\r\n    }\r\n\r\n    function handleSubmit(e) {\r\n        // Запрещаем браузеру переходить по адресу формы\r\n        e.preventDefault();\r\n\r\n        // Передаём значения управляемых компонентов во внешний обработчик\r\n        props.onUpdateUser({\r\n            name,\r\n            about: description,\r\n        });\r\n    }\r\n\r\n    return (\r\n        <PopupWithForm name=\"profile\" title=\"Редактировать профиль\" isOpen={props.isOpen} onClose={props.onClose} onSubmit={handleSubmit}\r\n                       buttonText={props.buttonText} buttonDisable={props.buttonDisable}\r\n                       children={\r\n                           <>\r\n                               <div className=\"form__section\">\r\n                                   <label htmlFor=\"name\" className=\"form__label\"></label>\r\n                                   <input type=\"text\" className=\"form__item form__item_type_name\" id=\"name\"\r\n                                          name=\"name\" placeholder=\"Имя\"\r\n                                          required minLength=\"2\" maxLength=\"40\" value={name || ''} onChange={handleChangeName}/>\r\n                                   <span className=\"form__input-error\" id=\"name-error\"></span>\r\n                               </div>\r\n                               <div className=\"form__section\">\r\n                                   <label htmlFor=\"about\" className=\"form__label\"></label>\r\n                                   <input type=\"text\" className=\"form__item form__item_type_about\" id=\"about\" name=\"about\" placeholder=\"О себе\"\r\n                                          required minLength=\"2\" maxLength=\"200\" value={description || ''} onChange={handleChangeDescription}/>\r\n                                   <span className=\"form__input-error\" id=\"about-error\"></span>\r\n                               </div>\r\n                           </>\r\n                       }/>\r\n    );\r\n}\r\n\r\nexport default EditProfilePopup;","import React from 'react';\r\nimport PopupWithForm from \"./PopupWithForm\";\r\n\r\nfunction EditAvatarPopup(props) {\r\n\r\n    const avatarRef = React.useRef();\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault();\r\n        props.onUpdateAvatar({\r\n            avatar: avatarRef.current.value,\r\n        });\r\n\r\n        avatarRef.current.value = '';\r\n    }\r\n\r\n    return (\r\n        <PopupWithForm name=\"edit-avatar\" title=\"Обновить аватар\" isOpen={props.isOpen} onClose={props.onClose} onSubmit={handleSubmit}\r\n                       buttonText={props.buttonText} buttonDisable={props.buttonDisable}\r\n                       children={\r\n                           <div className=\"form__section\">\r\n                               <label htmlFor=\"avatar-link\" className=\"form__label\"></label>\r\n                               <input ref={avatarRef} type=\"url\" className=\"form__item form__item_type_avatar-link\"\r\n                                      id=\"avatar-link\" name=\"avatar\" placeholder=\"Ссылка на картинку\"\r\n                                      required defaultValue=''/>\r\n                               <span className=\"form__input-error\" id=\"avatar-link-error\"></span>\r\n                           </div>\r\n                       }/>\r\n    );\r\n}\r\n\r\nexport default EditAvatarPopup;","import React from 'react';\r\nimport PopupWithForm from \"./PopupWithForm\";\r\n\r\nfunction PopupDeleteCard(props) {\r\n\r\n    function handleSubmit(e) {\r\n        // Запрещаем браузеру переходить по адресу формы\r\n        e.preventDefault();\r\n\r\n        props.onDeleteCard(props.onCardDeleteData)\r\n    }\r\n\r\n    return (\r\n        <PopupWithForm name=\"cardDelete\" title=\"Вы уверены?\" isOpen={props.isOpen} onClose={props.onClose} onSubmit={handleSubmit}\r\n                       buttonText={props.buttonText} buttonDisable={props.buttonDisable}\r\n                       />\r\n    );\r\n}\r\n\r\nexport default PopupDeleteCard;","import React from 'react';\r\n\r\nfunction ImagePopup(props) {\r\n    return (\r\n        <section className={props.card.link !== ''  ? 'popup popup_type_photo popup_is-opened' : 'popup popup_type_photo'}>\r\n\r\n            <div className=\"popup-photo\">\r\n                <button className=\"popup__close page__button\" onClick={props.onClose}></button>\r\n                <figure className=\"popup-photo__image-container\">\r\n                    <img className=\"popup-photo__image\" alt={props.card.name} src={props.card.link}/>\r\n                    <figcaption className=\"popup-photo__title\">{props.card.name}</figcaption>\r\n                </figure>\r\n            </div>\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default ImagePopup;","class Api {\r\n\r\n    constructor(config, authorization) {\r\n        this.url = config.url;\r\n        this.authorization = authorization;\r\n        this.headers = {\r\n            'Content-Type': 'application/json',\r\n            'authorization': this.authorization\r\n        }\r\n    }\r\n\r\n\r\n    _getResponseData(res) {\r\n        if (!res.ok) {\r\n            return Promise.reject(`Ошибка: ${res.status}`);\r\n        }\r\n        return res.json();\r\n    }\r\n\r\n    getCards () {\r\n        return fetch(this.url + 'cards', {\r\n            headers: this.headers\r\n        }).then(response => {\r\n           return this._getResponseData(response)\r\n        })\r\n\r\n    }\r\n\r\n    createCardApi (data) {\r\n        return fetch(this.url + 'cards', {\r\n            headers: this.headers,\r\n            method: 'POST',\r\n            body: JSON.stringify(data)\r\n        }).then(response => {\r\n            return this._getResponseData(response)\r\n        })\r\n\r\n    }\r\n\r\n    deleteCardApi (_id) {\r\n        return fetch(this.url + 'cards' + '/' + _id, {\r\n            headers: this.headers,\r\n            method: 'DELETE',\r\n        }).then(response => {\r\n            return this._getResponseData(response)\r\n        })\r\n    }\r\n\r\n    getUserInfoApi () {\r\n        return fetch(this.url + 'users/me', {\r\n            headers: this.headers\r\n        }).then(response => {\r\n            return this._getResponseData(response)\r\n        })\r\n    }\r\n\r\n    createNewUserInfoApi (data) {\r\n        return fetch(this.url + 'users/me', {\r\n            headers: this.headers,\r\n            method: 'PATCH',\r\n            body: JSON.stringify(data)\r\n        }).then(response => {\r\n            return this._getResponseData(response)\r\n        })\r\n    }\r\n\r\n    createNewUserAvatarApi (data) {\r\n        return fetch(this.url + 'users/me/avatar', {\r\n            headers: this.headers,\r\n            method: 'PATCH',\r\n            body: JSON.stringify(data)\r\n        }).then(response => {\r\n            return this._getResponseData(response)\r\n        })\r\n    }\r\n\r\n    likeApi (_id) {\r\n        return fetch(this.url + 'cards/likes/' + _id, {\r\n            headers: this.headers,\r\n            method: 'PUT'\r\n        }).then(response => {\r\n            return this._getResponseData(response)\r\n        })\r\n    }\r\n\r\n    deleteLikedApi (_id) {\r\n        return fetch(this.url + 'cards/likes/' + _id, {\r\n            headers: this.headers,\r\n            method: 'DELETE',\r\n        }).then(response => {\r\n            return this._getResponseData(response)\r\n        })\r\n    }\r\n}\r\n\r\n\r\nconst url = {\r\n    url: 'https://mesto.nomoreparties.co/v1/cohort-27/'\r\n}\r\nconst authorization = '8ab69193-abde-425d-8080-68fbeb2c2f47';\r\n\r\n\r\nexport const api = new Api(url, authorization);","import React from 'react';\n\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext.js\";\n\nimport Header from './Header.js';\nimport Main from './Main.js';\nimport Footer from './Footer.js';\nimport AddPlacePopup from './AddPlacePopup.js';\nimport EditProfilePopup from './EditProfilePopup.js';\nimport EditAvatarPopup from './EditAvatarPopup.js';\nimport PopupDeleteCard from './PopupDeleteCard.js';\nimport ImagePopup from './ImagePopup.js';\nimport {api} from \"../utils/Api\";\n\n\nfunction App() {\n    const emptyCard = {name : '', link: ''};\n    const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\n    const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n    const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\n    const [isDeleteCardPopupOpen, setIsDeleteCardPopupOpen] = React.useState(false);\n    const [selectedCard, setSelectedCard] = React.useState(emptyCard);\n    const [cards, setCards] = React.useState([]);\n    const [currentUser, setCurrentUser] = React.useState({});\n\n    //получение данных пользователя\n    React.useEffect(() => {\n        api\n            .getUserInfoApi()\n            .then(userData => {\n                setCurrentUser(userData)\n            })\n            .catch(err => console.log(err))\n    }, []);\n\n    //открытие и закрытие попапов\n    function handleEditAvatarClick(buttonText) {\n        setIsEditAvatarPopupOpen(true);\n    }\n\n    function handleEditProfileClick() {\n        setIsEditProfilePopupOpen(true);\n    }\n\n    function handleAddPlaceClick() {\n        setIsAddPlacePopupOpen(true);\n    }\n\n    function handleDeleteCardClick() {\n        setIsDeleteCardPopupOpen(true);\n    }\n\n    function handleCardClick(card) {\n        setSelectedCard(card);\n    }\n\n    function closeAllPopups() {\n        setIsEditProfilePopupOpen(false);\n        setIsEditAvatarPopupOpen(false);\n        setIsAddPlacePopupOpen(false);\n        setIsDeleteCardPopupOpen(false)\n        setSelectedCard(emptyCard)\n    }\n\n    //закрытие попапа по Esc\n    React.useEffect(() => {\n        const closeByEscape = (e) => {\n            if (e.key === 'Escape') {\n                closeAllPopups();\n            }\n        }\n\n        document.addEventListener('keydown', closeByEscape)\n\n        return () => document.removeEventListener('keydown', closeByEscape)\n    }, [])\n\n\n    //обновление данных пользователя\n    function handleUpdateUser(newUserData) {\n        buttonState(buttonText, true);\n        api\n            .createNewUserInfoApi(newUserData)\n            .then(newUserData => {\n                setCurrentUser(newUserData);\n                closeAllPopups();\n            })\n            .catch(err => console.log(err))\n            .finally(() => {\n                buttonState(buttonText, false)\n            });\n    }\n\n    //обновление аватара пользователя\n    function handleUpdateAvatar(newUserAvatar) {\n        buttonState(buttonText, true);\n        api\n            .createNewUserAvatarApi(newUserAvatar)\n            .then(newUserAvatar => {\n                setCurrentUser(newUserAvatar);\n                closeAllPopups();\n            })\n            .catch(err => console.log(err))\n            .finally(() => {\n                buttonState(buttonText, false)\n            });\n    }\n\n    //добавление новой карточки\n    function handleAddPlaceSubmit(newCard) {\n        buttonState(buttonText, true);\n        api\n            .createCardApi(newCard)\n            .then(newCard => {\n                setCards([newCard, ...cards]);\n                closeAllPopups();\n            })\n            .catch(err => console.log(err))\n            .finally(() => {\n                buttonState(buttonText, false)\n            });\n    }\n\n    //запрос данных карточки\n    React.useEffect(() => {\n        api\n            .getCards()\n            .then(cardsData => {\n                setCards(cardsData)\n            })\n            .catch(err => console.log(err))\n\n    }, []);\n\n    //лайки и дизлайки\n    function handleCardLike(card) {\n        // Снова проверяем, есть ли уже лайк на этой карточке\n        const isLiked = card.likes.some(i => i._id === currentUser._id);\n\n        if (!isLiked) {\n            api\n                .likeApi(card._id,)\n                .then((newCard) => {\n                    setCards((state) => state.map((c) => c._id === card._id ? newCard : c));\n                })\n                .catch(err => console.log(err))\n        }\n\n        else {\n            api\n                .deleteLikedApi(card._id)\n                .then((newCard) => {\n                    setCards((state) => state.map((c) => c._id === card._id ? newCard : c));\n                })\n                .catch(err => console.log(err))\n        }\n    }\n\n    //удаление карточки через попап\n    const [deleteCard, setDeleteCard] = React.useState([]);\n\n    //получаем данные карточки, которую надо удалить\n    function cardDataRead(cardDeleteData) {\n        setDeleteCard(cardDeleteData)\n    }\n    //обработчик удаления карточки\n    function handleDeleteCardSubmit(cardDataDelete) {\n        api\n            .deleteCardApi(cardDataDelete._id)\n            .then(() => {\n                setCards((state) => state.filter(cardData => cardDataDelete._id !== cardData._id))\n                closeAllPopups();\n            })\n            .catch(err => console.log(err))\n    }\n\n\n    const [buttonText, setButtonText] = React.useState('');\n    const [buttonDisable, setButtonDisable] = React.useState(false);\n\n    //Получаем изначальный текст кнопки\n    function buttonTextRead(buttonText) {\n        setButtonText(buttonText)\n    }\n\n    //Процесс загрузки\n    function buttonState(button, isLoading2) {\n        if(isLoading2) {\n            setButtonText('Сохранение...');\n            setButtonDisable(true);\n        }\n\n        else{\n            setButtonText(button);\n            setButtonDisable(false);\n        }\n    }\n\n  return (\n    <div className=\"App\">\n        <CurrentUserContext.Provider value={currentUser}>\n            <div className=\"page\">\n                <div className=\"page__content\">\n                    <Header/>\n\n                    <Main onEditProfile={handleEditProfileClick}\n                          onAddPlace={handleAddPlaceClick}\n                          onEditAvatar={handleEditAvatarClick}\n                          onCardClick={handleCardClick}\n                          cards={cards}\n                          onCardLike={handleCardLike}\n                          onCardDelete={handleDeleteCardClick}\n                          onCardDataRead={cardDataRead}\n                          onButtonTextRead={buttonTextRead}\n                    />\n\n                    <Footer/>\n\n                    <ImagePopup card={selectedCard} onClose={closeAllPopups}/>\n\n                    <EditProfilePopup isOpen={isEditProfilePopupOpen} onClose={closeAllPopups} onUpdateUser={handleUpdateUser}\n                                      buttonText={buttonText} buttonDisable={buttonDisable}/>\n\n                    <EditAvatarPopup isOpen={isEditAvatarPopupOpen} onClose={closeAllPopups} onUpdateAvatar={handleUpdateAvatar}\n                                     buttonText={buttonText} buttonDisable={buttonDisable}\n\n                    />\n\n                    <AddPlacePopup isOpen={isAddPlacePopupOpen} onClose={closeAllPopups} onAddPlace={handleAddPlaceSubmit}\n                                   buttonText={buttonText} buttonDisable={buttonDisable}/>\n\n                    <PopupDeleteCard isOpen={isDeleteCardPopupOpen} onClose={closeAllPopups} onDeleteCard={handleDeleteCardSubmit}\n                                     onCardDeleteData={deleteCard} buttonText={buttonText}/>\n\n                </div>\n            </div>\n        </CurrentUserContext.Provider>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}